<Window x:Class="P03AplikacjaPogodaClientAPI.ShopWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:P03AplikacjaPogodaClientAPI"
        xmlns:vm="clr-namespace:P03AplikacjaPogodaClientAPI.ViewModels.ProductViewModel"
        xmlns:conv="clr-namespace:P03AplikacjaPogodaClientAPI.ViewModels.Converters"
        xmlns:uc="clr-namespace:P03AplikacjaPogodaClientAPI.Controls"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        mc:Ignorable="d"
        Title="ShopWindow" Height="450" Width="800">
        

    <!--<Window.Resources>
        <vm:ProductWindowVM x:Key="vmData"></vm:ProductWindowVM>
    </Window.Resources>-->
    <Window.Resources>
        <conv:UrlToImageConverter x:Key="urlToImageConverter"></conv:UrlToImageConverter>
        <conv:ScreenHeightToRangeConverter x:Key="screenHeightToRangeConverter"></conv:ScreenHeightToRangeConverter>
        <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"></BooleanToVisibilityConverter>
        <Style x:Key="TextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}, Converter={StaticResource screenHeightToRangeConverter}}" Value="1080">
                    <Setter Property="FontSize" Value="30"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}, Converter={StaticResource screenHeightToRangeConverter}}" Value="1440">
                    <Setter Property="FontSize" Value="30"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <DockPanel x:Name="ShopPanel">
        <uc:HeaderControl DockPanel.Dock="Top"></uc:HeaderControl>
        <Button Content="Api test" x:Name="btnShopApiTest" Click="btnShopApiTest_Click" DockPanel.Dock="Top"></Button>
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Products}" SelectedItem="{Binding SelectedProduct}" Height="1000">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <uc:ProductControl Product="{Binding}"></uc:ProductControl>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <StackPanel Grid.Column="1">
                <TextBlock Style="{StaticResource TextBlockStyle}" Text="Title"></TextBlock>
                <TextBox Text="{Binding SelectedProduct.Title, Mode=TwoWay}"></TextBox>
                <TextBlock Text="Description"></TextBlock>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" Text="{Binding SelectedProduct.Description, Mode=TwoWay}"></TextBox>
                    <Button Grid.Column="1" Content="Speak" Command="{Binding SpeakCommand}"></Button>
                    <Image Visibility="{Binding Speaking, Converter={StaticResource boolToVisibilityConverter}}" Width="20" gif:ImageBehavior.AnimatedSource="/Images/phone.gif" Grid.Column="2"></Image>
                    <!--dotnet add package WpfAnimatedGif-->
                </Grid>
                <TextBlock Text="Color"></TextBlock>
                <TextBox Text="{Binding SelectedProduct.Color, Mode=TwoWay}"></TextBox>
                <TextBlock Text="Image url"></TextBlock>
                <TextBox Text="{Binding SelectedProduct.Url, Mode=TwoWay}"></TextBox>
                <Button Content="Save" Command="{Binding EditCommand}"></Button>
                <Button Content="Delete" Command="{Binding DeleteCommand}"></Button>
                <Button Content="Create" Command="{Binding CreateCommand}"></Button>
            </StackPanel>
        </Grid>
        
    </DockPanel>
</Window>
